package modell;

import javax.servlet.http.HttpServletRequest;

public class PersonSkjema {
	
	
	private String fornavn;
	private String etternavn;
 	private String mobil;
 	private String kjonn;
 	
	
	
	
	private String fornavnFeilmelding="";
	private String etternavnFeilmelding="";
	private String mobilFeilmelding="";
	private String kjonnFeilmelding="";
	
	public PersonSkjema(HttpServletRequest request) {
		fornavn = request.getParameter("fornavn");
		etternavn = request.getParameter("etternavn");
		mobil = request.getParameter("mobil");
		kjonn = request.getParameter("kjonn");
	}



	
	public boolean erAllInputGyldig() {
		
		boolean allInputGyldig = true;
		
		if (!isValidForNavn(fornavn)) {
 			allInputGyldig = false;
		}
		if (!isValidEtterNavn(etternavn)) {
 			allInputGyldig = false;
		}
		if (!isValidMobil(mobil)) {
 			allInputGyldig = false;
		}
		if (!isValidForKjonn(kjonn)) {
 			allInputGyldig = false;
		}

		return allInputGyldig;
	}
	
//	Fornavn skal v√¶re 2-20 tegn og kan inneholde bokstaver (inkl. √¶√∏√•√Ü√ò√Ö),
//	bindestrek og mellomrom. F√∏rste tegn skal v√¶re en stor bokstav.

    public  boolean isValidForNavn(String fornavn) {
        boolean valid=true;
        if (fornavn == null) {
    		fornavnFeilmelding = "<br/>Fornavn er obligatorisk og m√• v√¶re 2-20 tegn.</br> - F√∏rste tegn m√• v√¶re en stor bokstav.</br> - Fornavn kan kun inneholde bokstaver, bindestrek og mellomrom.";
    		 valid=false;
    		
        }else {
        	if (! fornavn.matches("^.{2,20}$")) {
        		fornavnFeilmelding =  "<br/>- Fornavn er m√• v√¶re 2-20 tegn.";
        		valid=false;
        	}
        	if (! fornavn.matches("^[A-Z√Ü√ò√Ö].*$")) {
        		fornavnFeilmelding =  fornavnFeilmelding+"<br/>- F√∏rste tegn m√• v√¶re en stor bokstav";
        		valid=false;
        	}
        	if (! fornavn.matches("[a-zA-z√¶√∏√•√Ü√ò√Ö_ ]+")) {
        		fornavnFeilmelding =  fornavnFeilmelding+"</br> - Fornavn kan kun inneholde bokstaver, bindestrek og mellomrom.";
        		valid=false;

        	}
        }
        
		return valid;
        
    }
    
//	ÔÇ∑ Etternavn skal v√¶re 2-20 tegn og kan inneholde bokstaver (inkl. √¶√∏√•√Ü√ò√Ö) og
//	bindestrek (IKKE mellomrom). F√∏rste tegn skal v√¶re en stor bokstav.

    public  boolean isValidEtterNavn(String etternavn) {
        boolean valid=true;
        if (etternavn == null) {
    		etternavnFeilmelding = "<br/>Etter er obligatorisk og m√• v√¶re 2-20 tegn.</br> - F√∏rste tegn m√• v√¶re en stor bokstav.</br> - Etter kan kun inneholde bokstaver og bindestrek (IKKE mellomrom).";
    		 valid=false;
    		
        }else {
        	if (! etternavn.matches("^.{2,20}$")) {
        		etternavnFeilmelding =  "<br/>- Fornavn er m√• v√¶re 2-20 tegn.";
        		valid=false;
        	}
        	if (! etternavn.matches("^[A-Z√Ü√ò√Ö].*$")) {
        		etternavnFeilmelding =  etternavnFeilmelding+"<br/>- F√∏rste tegn m√• v√¶re en stor bokstav";
        		valid=false;
        	}
        	if (! etternavn.matches("[a-zA-z√¶√∏√•√Ü√ò√Ö_]+")) {
        		etternavnFeilmelding =  etternavnFeilmelding+"</br> - Fornavn kan kun inneholde bokstaver og bindestrek.";
        		valid=false;

        	}
        }
        
		return valid;
        
    }

//	at mobilnummeret IKKE m√• tilh√∏re en allerede p√•meldt deltager. Alle
//	mobilnumre i deltagerlisten skal v√¶re unike.
    public  boolean isValidMobil(String mobil) {
        if (mobil == null || !mobil.matches("^[0-9]{8}$")) {
        	mobilFeilmelding="<br/>- Mobil skal v√¶re eksakt 8 siffer";
        	return false;
		}    
        return true;
    }
    
    public  boolean isValidForKjonn(String kjonn) {
        boolean valid=true;
        if (kjonn == null) {
    		kjonnFeilmelding = "<br/>Kjonn er obligatorisk og mÂ vÊre fyllt ut.</br> ";
    		 valid=false;
        }
        
		return valid;
        
    }




	public String getFornavn() {
		return fornavn;
	}




	public void setFornavn(String fornavn) {
		this.fornavn = fornavn;
	}




	public String getEtternavn() {
		return etternavn;
	}




	public void setEtternavn(String etternavn) {
		this.etternavn = etternavn;
	}




	public String getMobil() {
		return mobil;
	}




	public void setMobil(String mobil) {
		this.mobil = mobil;
	}




	public String getFornavnFeilmelding() {
		return fornavnFeilmelding;
	}




	public void setFornavnFeilmelding(String fornavnFeilmelding) {
		this.fornavnFeilmelding = fornavnFeilmelding;
	}




	public String getEtternavnFeilmelding() {
		return etternavnFeilmelding;
	}




	public void setEtternavnFeilmelding(String etternavnFeilmelding) {
		this.etternavnFeilmelding = etternavnFeilmelding;
	}




	public String getMobilFeilmelding() {
		return mobilFeilmelding;
	}




	public void setMobilFeilmelding(String mobilFeilmelding) {
		this.mobilFeilmelding = mobilFeilmelding;
	}




	public String getKjonn() {
		return kjonn;
	}

	public void setKjonn(String kjonn) {
		this.kjonn = kjonn;
	}
	
	public String getKjonnFeilmelding() {
		return kjonnFeilmelding;
	}

	public void setKjonnFeilmelding(String kjonnFeilmelding) {
		this.kjonnFeilmelding = kjonnFeilmelding;
	}
	
}











